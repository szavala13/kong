# Do not use Kong Ingress Controller
ingressController:
  enabled: false

image:
  repository: sazp/kong-image
  tag: '3.4.3.12'

# Mount the secret created earlier
secretVolumes:
  - kong-cluster-cert

env:
  # This is a control_plane node
  role: control_plane
  # These certificates are used for control plane / data plane communication
  cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
  cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key

  # Database
  # CHANGE THESE VALUES
  database: postgres
  pg_database: kong
  pg_user: kong
  pg_password: demo123
  pg_host: postgres17
  pg_ssl: 'off'

  # Kong Manager password
  password: hola1010

  admin_gui_url: http://manager.example.com
  admin_gui_api_url:
    http://admin.example.com
    # Change the secret and set cookie_secure to true if using a HTTPS endpoint
  admin_gui_session_conf: '{"secret":"secret","storage":"kong","cookie_secure":false}'

# Enterprise functionality
enterprise:
  enabled: true
  license_secret: kong-enterprise-license
  rbac:
    enabled: true
    admin_gui_auth: basic-auth

# The control plane serves the Admin API
admin:
  enabled: true
  http:
    enabled: true

# Clustering endpoints are required in hybrid mode
cluster:
  enabled: true
  tls:
    enabled: true

clustertelemetry:
  enabled: true
  tls:
    enabled: true

# Optional features
manager:
  enabled: true
  http:
    enabled: true
  tls:
    enabled: false

  ingress:
    enabled: true
    hostname: manager.example.com
    path: /
    pathType: Prefix
    ingressClassName: kong

portal:
  enabled: false

portalapi:
  enabled: false

# These roles will be served by different Helm releases
proxy:
  enabled: false
